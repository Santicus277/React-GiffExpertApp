{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropTypes","func","isRequiered","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oNAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAqCC,mBAAS,IAA9C,mBAAQC,EAAR,KAAoBC,EAApB,KAqBA,OACI,sBAAMC,SAhBS,SAACC,GAEhBA,EAAEC,iBAGCJ,EAAWK,OAAOC,OAAO,IAExBR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAkBO,OACpCN,EAAc,MAQlB,SAGA,uBACIO,KAAK,OACLC,MAAOT,EACPU,SA3BgB,SAACP,GAErBF,EAAcE,EAAEQ,OAAOF,aAiC/BZ,EAAYe,UAAU,CAElBd,cAAee,IAAUC,KAAKC,a,mCC1CrBC,EAAO,uCAAE,WAAMC,GAAN,uBAAAC,EAAA,6DAEZC,EAFY,iDAEkCC,UAAWH,GAF7C,+DAGDI,MAAMF,GAHL,cAGZG,EAHY,gBAICA,EAAKC,OAJN,uBAIXC,EAJW,EAIXA,KAEDC,EAAMD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EAEtB,MAAO,CAEHC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZxB,kBAiBXM,GAjBW,4CAAF,sDCAPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGpC,OACI,sBAAKc,UAAU,yBAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCJKO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAIrB,ECFc,SAACA,GAEvB,MAA0BlB,mBAAS,CAG/ByB,KAAK,GACLa,SAAQ,IAJZ,mBAAOC,EAAP,KAAcC,EAAd,KAwBA,OAjBAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CAELf,KAAKkB,EACLL,SAAQ,SAMrB,CAACpB,IAIGqB,EDxB8BK,CAAa1B,GAA9Ba,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAMpB,OACI,qCACA,oBAAIJ,UAAU,oBAAd,SAAmChB,IAGlCoB,GAAU,mBAAGJ,UAAU,iBAAb,yBAEX,qBAAKA,UAAU,YAAf,SAIKH,EAAOJ,KAAI,SAAAC,GAAG,OAEX,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aErBjCgB,EAAe,WAIxB,MAAoC7C,mBAAS,CAAC,cAA9C,mBAAO8C,EAAP,KAAmB/C,EAAnB,KAIA,OAGI,qCACA,8CAEI,cAAC,EAAD,CAAaA,cAAeA,OAEhC,uBAEA,6BAEK+C,EAAWnB,KAAI,SAAAT,GAAQ,OAExB,cAAC,EAAD,CAAyBA,SAAUA,GAApBA,Y,MCrB3B6B,IAASC,OAEL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.735219e9.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const  [inputValue, setInputValue] = useState(\"\")\r\n    const handleInputChange=(e)=>{\r\n\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const hanldeSubmit=(e)=>{\r\n\r\n        e.preventDefault();\r\n\r\n\r\n        if(inputValue.trim().length>2){\r\n\r\n            setCategories(cats=>[ inputValue,...cats]);\r\n            setInputValue('');\r\n\r\n        }\r\n        \r\n\r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={hanldeSubmit}>\r\n\r\n        \r\n        <input\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n\r\n        />\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.prototype={\r\n\r\n    setCategories: PropTypes.func.isRequiered\r\n}\r\n","\r\n\r\nexport const getGifs= async(category)=>{\r\n\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI (category)}&limit=15&api_key=IxlNbE8IRX21lqjq3bLbkVmIHimhqmzO`;\r\n    const resp=await fetch(url);\r\n    const {data}=await resp.json();\r\n\r\n    const gifs= data.map(img=>{\r\n\r\n        return {\r\n\r\n            id:img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n\r\n    })\r\n\r\n    return gifs;\r\n    \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n  \r\n    return (\r\n        <div className=\"card animate__bounceIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n        export const GifGrid = ({category}) => {\r\n            \r\n\r\n            \r\n            const {data:images, loading}=useFetchGifs(category);\r\n\r\n\r\n        \r\n\r\n            \r\n            return (\r\n                <>\r\n                <h3 className=\"animate__bounceIn\">{category}</h3>\r\n\r\n\r\n                {loading &&<p className=\"animate__flash\">Cargando...</p>}\r\n\r\n                <div className=\"card-grid\">\r\n                    \r\n                    \r\n\r\n                    {images.map(img=>(\r\n\r\n                        <GifGridItem key={img.id} {...img}\r\n\r\n                        />\r\n                        \r\n\r\n                    ))\r\n                    }\r\n                    \r\n                    \r\n                </div>\r\n                </>\r\n            )\r\n        }\r\n","\r\nimport {useState, useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\n\r\nexport const useFetchGifs=(category)=>{\r\n\r\n    const [state, setstate] = useState({\r\n        \r\n\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(() => {\r\n        \r\n        getGifs(category)\r\n            .then(imgs=>{\r\n                setstate({\r\n\r\n                    data:imgs,\r\n                    loading:false\r\n\r\n                })\r\n\r\n            })\r\n\r\n    }, [category])\r\n    \r\n   \r\n\r\n    return state;\r\n\r\n\r\n}","\r\n\r\nimport React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categories=['One Punch', 'Samurai', 'Dragon Ball'];\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n\r\n\r\n    return (\r\n        \r\n        \r\n        <>\r\n        <h2>\r\n            GifExpertApp\r\n            <AddCategory setCategories={setCategories}/>\r\n        </h2>\r\n        <hr/>\r\n        \r\n        <ol>\r\n\r\n            {categories.map(category=>(\r\n            \r\n            <GifGrid key= {category} category={category}/>))\r\n            \r\n            }\r\n\r\n        </ol>\r\n\r\n        </>\r\n    )\r\n    \r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n    document.getElementById('root')\n  \n  \n);\n\n\n"],"sourceRoot":""}